二、操作表

1、自行创建测试数据


2、查询“生物”课程比“物理”课程成绩高的所有学生的学号；
 SELECT  * FROM(SELECT * FROM course LEFT JOIN score ON score.course_id = course.cid
  WHERE course.cname = '生物'  ) AS A INNER JOIN (SELECT *FROM  course LEFT JOIN score ON score.course_id = course.cid
   WHERE course.cname = '物理' ) AS B ON A.student_id = B.student_id  WHERE  A.num > B.num

3、查询平均成绩大于60分的同学的学号和平均成绩； 
SELECT  B.student_id,student.sname,B.cc  FROM( SELECT student_id, num,avg(num) AS cc
FROM score   GROUP BY  student_id  HAVING avg(num) > 60) AS B  LEFT JOIN student ON B.student_id = student.sid；

4、查询所有同学的学号、姓名、选课数、总成绩；
 SELECT
     student_id,
     student.sname,
     count(score.course_id)as cc,
     sum(num)as cj
 FROM
     student
 LEFT JOIN score ON score.student_id = student.sid
 GROUP BY
     score.student_id

5、查询姓“李”的老师的个数；
 SELECT * from teacher where tname like '李%'

6、查询没学过“叶平”老师课的同学的学号、姓名；
SELECT student.sid,student.sname from student where sid not in
 (SELECT
     student_id
 FROM
 score
 WHERE course_id IN
     (
         SELECT
             course.cid
         FROM
             course
         LEFT JOIN teacher ON teacher.tid = course.teacher_id
         WHERE
             tname = '叶平'
     ) GROUP BY student_id)

7、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；
 select A.student_id,B.sname FROM (SELECT score.student_id,student.sname,course_id
  ')as A
  LEFT JOIN(SELECT score.student_id,student.sname,course_id
  ')as B
  on A.student_id=B.student_id
 where A.course_id=1 and B.course_id=2;
8、查询学过“叶平”老师所教的所有课的同学的学号、姓名；
 SELECT student.sid,student.sname from student where sid not in
 (SELECT
     student_id
 FROM
 score
 WHERE course_id IN
     (
         SELECT
             course.cid
         FROM
             course
         LEFT JOIN teacher ON teacher.tid = course.teacher_id
         WHERE
             tname = '叶平'
     ) GROUP BY student_id)

9、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名；
 SELECT
     student.sid,
     student.sname
 FROM
     (
         SELECT
             *
         FROM
             score
         WHERE
             score.course_id = '
     ) AS A
 LEFT JOIN (
     SELECT
         *
     FROM
         score
     WHERE
         score.course_id = '
 ) AS B ON A.student_id = B.student_id
 LEFT JOIN student ON student.sid = B.student_id
 WHERE
     A.num < B.num
10、查询有课程成绩小于60分的同学的学号、姓名；
 SELECT
     student.sid,
     student.sname
 FROM
     score
 LEFT JOIN course ON course.cid = score.course_id
 LEFT JOIN student ON student.sid = score.student_id
 WHERE
     score.num < 60
 GROUP BY
     student_id

11、查询没有学全所有课的同学的学号、姓名；
SELECT
     student.sid,
     student.sname
 FROM
     student
 WHERE
     student.sid NOT IN (
         SELECT
             student.sid
         FROM
             score
         LEFT JOIN course ON course.cid = score.course_id
         LEFT JOIN student ON student.sid = score.student_id
         GROUP BY
             score.student_id
         HAVING
             count(course_id) = (SELECT COUNT(cid) FROM course)
     )

12、查询至少有一门课与学号为“001”的同学所学相同的同学的学号和姓名；
 SELECT
 *
  FROM
     score
     LEFT JOIN student on score.student_id = student.sid
     LEFT JOIN course ON course.cid = score.course_id
  WHERE student_id != 1 AND
 score.course_id  in  (
         SELECT
             course_id
         FROM
             score
         WHERE
             student_id = 1
 )
 GROUP BY student_id

13、查询至少学过学号为“001”同学所有一门课的其他同学学号和姓名；
 SELECT student_id from score where student_id!=1 and course_id IN
 (select course_id from score where student_id =1 GROUP BY course_id)
 GROUP BY student_id

14、查询和“002”号的同学学习的课程完全相同的其他同学学号和姓名；
 SELECT
     student_id,
     sname
 FROM
     score
 LEFT JOIN student ON score.student_id = student.sid
 WHERE
     student_id IN (
         SELECT
             student_id
         FROM
             score
         WHERE
             student_id != 1
         GROUP BY
             student_id
         HAVING
             count(course_id) = (
                 SELECT
                     count(1)
                 FROM
                     score
                 WHERE
                     student_id = 1
             )
     )
 AND course_id IN (
     SELECT
         course_id
     FROM
         score
     WHERE
         student_id = 1
 )
 GROUP BY
     student_id
 HAVING
     count(course_id) = (
         SELECT
             count(1)
         FROM
             score
         WHERE
             student_id = 1
     )

15、删除学习“叶平”老师课的SC表记录；
 DELETE FROM score where score.course_id IN
  (SELECT course_id from course LEFT JOIN teacher  on teacher.tid=course.teacher_id
  LEFT JOIN score on score.course_id=course.cid
  LEFT JOIN student  on score.student_id=student.sid
  WHERE teacher.tname='李平老师'
 GROUP BY course_id;)
16、向SC表中插入一些记录，这些记录要求符合以下条件：①没有上过编号“002”课程的同学学号；②插入“002”号课程的平均成绩； 
insert into score (student_id,course_id,num)SELECT student_id,1,FLOOR(avg(num))
 (SELECT student_id from score where course_id !=2
 SELECT FLOOR(avg(num))from score where course_id = 2)

17、按平均成绩从低到高显示所有学生的“语文”、“数学”、“英语”三门的课程成绩，按如下形式显示： 学生ID,语文,数学,英语,有效课程数,有效平均分；
 select sc.student_id,
         (select num from score left join course on score.course_id = course.cid where course.cname = "生物" and score.student_id=sc.student_id) as sy,
         (select num from score left join course on score.course_id = course.cid where course.cname = "物理" and score.student_id=sc.student_id) as wl,
         (select num from score left join course on score.course_id = course.cid where course.cname = "体育" and score.student_id=sc.student_id) as ty,
         count(sc.course_id),
         avg(sc.num)
     from score as sc
     group by student_id desc        
18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分；
 select student_id,MAX(num),MIN(num) from score GROUP BY course_id
19、按各科平均成绩从低到高和及格率的百分数从高到低顺序；
 SELECT
     course_id,
     avg(num) AS nn,
     sum(
         CASE
         WHEN num < 60 THEN
             0
         ELSE
             1
         END
     ),
     SUM(1),
     sum(
         CASE
         WHEN num < 60 THEN
             0
         ELSE
             1
         END
     ) / SUM(1) AS pj
 FROM
     score
 GROUP BY
     course_id
 ORDER BY
     avg(num) DESC
20、课程平均分从高到低显示（现实任课老师）；
SELECT score.course_id,course.cname,avg(num),teacher.tname from score LEFT JOIN course on course.cid=score.course_id
 LEFT JOIN teacher on teacher.tid=course.teacher_id
 GROUP BY course_id
 
 HAVING avg(num)
 ORDER BY avg(num) DESC
21、查询各科成绩前三名的记录:(不考虑成绩并列情况) 
select score.sid,score.course_id,score.num,T.first_num,T.second_num from score left join
     (
     select
         sid,
         (select num from score as s2 where s2.course_id = s1.course_id order by num desc limit 0,1) as first_num,
         (select num from score as s2 where s2.course_id = s1.course_id order by num desc limit 3,1) as second_num
     from
         score as s1
     ) as T
     on score.sid =T.sid
     where score.num <= T.first_num and score.num >= T.second_num
22、查询每门课程被选修的学生数；
 SELECT count(student_id) from score LEFT JOIN course on course.cid=score.course_id
 GROUP BY course_id
 HAVING COUNT(1) >4
23、查询出只选修了一门课程的全部学生的学号和姓名；
SELECT student.sid,student.sname from score LEFT JOIN student on student.sid=score.student_id
 LEFT JOIN course on course.cid=score.course_id
 GROUP BY student_id
 HAVING count(score.course_id)='
24、查询男生、女生的人数；
SELECT gender,count(sid) from student
 GROUP BY gender
 HAVING count(sid)
25、查询姓“张”的学生名单；
SELECT * from student where sname like '张%'
26、查询同名同姓学生名单，并统计同名人数；
 SELECT sname,COUNT(sname) from student
 GROUP BY sname
 HAVING COUNT(sname)
27、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列；
 SELECT course_id,avg(num) from score LEFT JOIN course on course.cid=score.course_id
  GROUP BY course_id
  ORDER BY avg(num) asc 
28、查询平均成绩大于85的所有学生的学号、姓名和平均成绩；
SELECT student.sid,student.sname,avg(num) from score LEFT JOIN student on student.sid=score.student_id
  GROUP BY student_id
  HAVING avg(num) > 85
29、查询课程名称为“数学”，且分数低于60的学生姓名和分数；
SELECT student.sname,score.num  from score LEFT JOIN student on student.sid=score.student_id
 LEFT JOIN course on course.cid=score.course_id
 where course.cname='数学' and score.num <60
30、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名； 
SELECT student.sid,student.sname from score LEFT JOIN course on course.cid=score.course_id
 LEFT JOIN student on student.sid=score.student_id
 where course.cid=' and num > 80
31、求选了课程的学生人数
SELECT COUNT(c) from
 (SELECT count(student_id)as c from score GROUP BY student_id)as A
32、查询选修“杨艳”老师所授课程的学生中，成绩最高的学生姓名及其成绩；
SELECT sname,num from score
 LEFT JOIN course on course.cid=score.course_id
 LEFT JOIN student on student.sid=score.student_id
 LEFT JOIN teacher on teacher.tid=course.teacher_id
 where teacher.tname='杨艳'
 GROUP BY student_id
 ORDER BY num DESC
 LIMIT 1
33、查询各个课程及相应的选修人数；
 SELECT cname,COUNT(1)from score LEFT JOIN course on course.cid=score.course_id
 GROUP BY course_id
34、查询不同课程但成绩相同的学生的学号、课程号、学生成绩；
select A1.student_id,A1.course_id,A2.course_id,A1.num,A2.num from score as A1 ,score as A2
 where A1.course_id!=A2.course_id and A1.num=A2.num
 GROUP BY student_id
35、查询每门课程成绩最好的前两名；
 select score.sid,score.course_id,score.num,T.first_num,T.second_num from score left join
     (
     select
         sid,
         (select num from score as s2 where s2.course_id = s1.course_id order by num desc limit 0,1) as first_num,
         (select num from score as s2 where s2.course_id = s1.course_id order by num desc limit 1,1) as second_num
     from
         score as s1
     ) as T
     on score.sid =T.sid
     where score.num <= T.first_num and score.num >= T.second_num
36、检索至少选修两门课程的学生学号；
SELECT count(A.c) from (select count(1)as c from score GROUP BY course_id)as A
 SELECT student_id from score LEFT JOIN student on student.sid=score.student_id
 GROUP BY student_id
 HAVING count(1) > 2
37、查询全部学生都选修的课程的课程号和课程名；
select course_id from score GROUP BY course_id HAVING COUNT(1)=(select count(1) from student)
38、查询没学过“叶平”老师讲授的任一门课程的学生姓名；
 SELECT
     student.sname
 FROM
     student
 WHERE
     sid NOT IN (
         SELECT
             course_id
         FROM
             score
         LEFT JOIN course ON course.cid = score.course_id
         LEFT JOIN student ON student.sid = score.student_id
         LEFT JOIN teacher ON teacher.tid = course.teacher_id
         WHERE
             teacher.tname = '叶平'
     )
39、查询两门以上不及格课程的同学的学号及其平均成绩；
 SELECT student_id,avg(num) from score where num <60 GROUP BY student_id HAVING count(1)>2
40、检索“004”课程分数小于60，按分数降序排列的同学学号；
SELECT student_id from score where course_id=4 and num <60 ORDER BY num DESC

41、删除“002”同学的“001”课程的成绩；
DELETE from score where student_id=2 and course_id=1