#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author: Wayne.Chen


'''
闭包：
出现闭包肯定会涉及到函数嵌套，外部的函数我们称之为外函数，里面的函数称为内函数
闭包，外函数中定义了一个内函数，内函数使用了外函数的临时变量，而外函数的返回值是内函数的引用【内函数的函数名】，像这样的情况我们就构成了一个闭包。

装饰器是最典型的一个闭包。

一般情况下，函数执行结束，函数中所有的变量都会被内存回收，但是对于闭包则是一种特殊情况，当外函数执行结束的时候发现自己还有临时变量在内函数中可能会使用到，这时候外函数会将自己的临时变量绑定到内函数身上，然后自己再结束。

闭包的优点：
1、提高代码的复用性
2、有效减少函数调用需要参数的数目
'''


def outer(f):
    def inner(*args):
        print("***********")
        f(*args)
    return inner
